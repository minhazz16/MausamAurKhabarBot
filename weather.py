# weather.py
import requests
import os

from dotenv import load_dotenv

load_dotenv()

API_KEY = os.getenv("WEATHER_API_KEY")


def check_weather_alerts(city):
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric&lang=hi"
        res = requests.get(url).json()
        
        if res.get("cod") != 200:
            return None
            
        weather_condition = res["weather"][0]["main"].lower()
        temp = res["main"]["temp"]
        
        # рдЕрд▓рд░реНрдЯ рдХрдВрдбреАрд╢рдиреНрд╕
        alerts = []
        if "rain" in weather_condition:
            alerts.append("тЪая╕П рднрд╛рд░реА рдмрд╛рд░рд┐рд╢ рдХреА рдЪреЗрддрд╛рд╡рдиреА! рдЫрд╛рддрд╛ рд▓реЗ рдЬрд╛рдПрдБред")
        if temp > 40:
            alerts.append("ЁЯФе рдЕрддреНрдпрдзрд┐рдХ рдЧрд░реНрдореА! рд╣рд╛рдЗрдбреНрд░реЗрдЯреЗрдб рд░рд╣реЗрдВред")
        if "storm" in weather_condition:
            alerts.append("тЪб рддреВрдлрд╛рди рдХреА рдЪреЗрддрд╛рд╡рдиреА! рд╕реБрд░рдХреНрд╖рд┐рдд рд╕реНрдерд╛рди рдкрд░ рд░рд╣реЗрдВред")
        # 'rain' рдЪреЗрдХ рдХреЗ рдмрд╛рдж рдпреЗ рд▓рд╛рдЗрдиреЗрдВ рдРрдб рдХрд░реЗрдВ (рд▓рдЧрднрдЧ рд▓рд╛рдЗрди 15 рдХреЗ рдмрд╛рдж)
        if "snow" in weather_condition:
            alerts.append("тЭДя╕П рдмрд░реНрдлрдмрд╛рд░реА рдХреА рдЪреЗрддрд╛рд╡рдиреА! рдЧрд╛рдбрд╝реА рд╕рд╛рд╡рдзрд╛рдиреА рд╕реЗ рдЪрд▓рд╛рдПрдБред")
        if temp < 5:
            alerts.append("ЁЯе╢ рдХрдбрд╝рд╛рдХреЗ рдХреА рдардВрдб! рдЧрд░реНрдо рдХрдкрдбрд╝реЗ рдкрд╣рдиреЗрдВред")    
            
        return "\n".join(alerts) if alerts else None
        
    except Exception as e:
        print(f"Alert check error: {e}")
        return None

def get_weather(city):
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric&lang=hi"
        res = requests.get(url).json()

        if res.get("cod") != 200:
            return "тЪая╕П рд╢рд╣рд░ рдХрд╛ рдореМрд╕рдо рдирд╣реАрдВ рдорд┐рд▓рд╛, рд╕рд╣реА рдирд╛рдо рдбрд╛рд▓реЗрдВред"

        weather_desc = res["weather"][0]["description"]
        temp = res["main"]["temp"]
        feels_like = res["main"]["feels_like"]
        humidity = res["main"]["humidity"]

        return (
            f"тШБя╕П {city.title()} рдХрд╛ рдореМрд╕рдо:\n"
            f"тАв рд╣рд╛рд▓рдд: {weather_desc}\n"
            f"тАв рддрд╛рдкрдорд╛рди: {temp}┬░C ЁЯФе\n"
            f"тАв рдирдореА: {humidity}%\n"
            f"тАв рдорд╣рд╕реВрд╕ рд╣реЛ рд░рд╣рд╛: {feels_like}┬░C\n"
        )
    except Exception as e:
        return f"тЪая╕П рдореМрд╕рдо рдлрд╝реЗрдЪ рдХрд░рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐: {str(e)}"
    
def get_coordinates(city):
    try:
        url = f"http://api.openweathermap.org/geo/1.0/direct?q={city}&limit=1&appid={API_KEY}"
        res = requests.get(url).json()
        if res:
            lat = res[0]['lat']
            lon = res[0]['lon']
            return lat, lon
        return None, None
    except:
        return None, None

def get_aqi(city):
    lat, lon = get_coordinates(city)
    if not lat or not lon:
        return "тЪая╕П рд╢рд╣рд░ рдХрд╛ AQI рдбреЗрдЯрд╛ рдирд╣реАрдВ рдорд┐рд▓рд╛ред"

    try:
        url = f"http://api.openweathermap.org/data/2.5/air_pollution?lat={lat}&lon={lon}&appid={API_KEY}"
        res = requests.get(url).json()
        aqi = res["list"][0]["main"]["aqi"]

        level_map = {
            1: "ЁЯЯв рдЕрдЪреНрдЫрд╛",
            2: "ЁЯЯб рдареАрдХ-рдард╛рдХ",
            3: "ЁЯЯа рдордзреНрдпрдо",
            4: "ЁЯФ┤ рдЦрд░рд╛рдм",
            5: "тЪл рдмрд╣реБрдд рдЦрд░рд╛рдм"
        }

        components = res["list"][0]["components"]
        return (
            f"ЁЯМля╕П *AQI рд░рд┐рдкреЛрд░реНрдЯ тАУ {city.title()}*\n"
            f"тАв AQI рд╕реНрддрд░: {level_map.get(aqi, 'тЭУ')}\n"
            f"тАв PM2.5: {components.get('pm2_5', '?')} ┬╡g/m┬│\n"
            f"тАв PM10: {components.get('pm10', '?')} ┬╡g/m┬│"
        )
    except Exception as e:
        return f"тЪая╕П AQI рд▓рд╛рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐: {str(e)}"

